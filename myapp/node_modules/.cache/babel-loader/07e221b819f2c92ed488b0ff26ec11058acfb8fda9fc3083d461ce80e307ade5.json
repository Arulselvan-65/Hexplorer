{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain_Prac\\\\block\\\\client\\\\myapp\\\\src\\\\App.jsx\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { useNavigate, R } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //   const [blockNumber, setBlockNumber] = useState({ num: '' });\n  //   const [hash, setHash] = useState('');\n  //   const [parentHash, setParenthash] = useState('');\n  //   const [nonce, setNonce] = useState('');\n  //   const [miner,setMiner] = useState('');\n  //   const [timestamp, setTimestamp] = useState('');\n  //   const [difficulty, setDifficulty] = useState('');\n  //   const [number, setNumber] = useState('');\n  //   const [extraData, setExtradata] = useState('');\n  //   const [transactions, setTransactions] = useState('');\n\n  //   function handle(e) {\n  //     setBlockNumber({ num: e.target.value });\n  //   }\n\n  //   const navigate = useNavigate();\n\n  //   const navigateToContacts = () => {\n  //     // 👇️ navigate to /contacts\n  //     navigate('./Transactions');\n  //   }; // Replace '/' with the path to the next page\n\n  //   async function getRes(event) {\n  //     if (event.key === 'Enter') {\n  //       try {\n  //         const res = await axios.post('http://localhost:3001/gift', {\n  //           num: blockNumber.num,\n  //         });\n  //         const r = res.data;\n  //         setHash(r.hash);\n  //         setParenthash(r.parentHash);\n  //         setNonce(r.nonce);\n  //         setNumber(r.number);\n  //         setDifficulty(r.difficulty);\n  //         setExtradata(r.extraData);\n  //         setMiner(r.miner);\n  //         setTransactions(r.transactions.length);\n  //         setTimestamp(formatTimestamp(r.timestamp));\n\n  //         function formatTimestamp(transactionTime) {\n  //           const currentTime = Math.floor(Date.now() / 1000); // Current time in seconds\n  //           const timeDifference = currentTime - transactionTime;\n  //           const hours = Math.floor(timeDifference / 3600);\n  //           const minutes = Math.floor((timeDifference % 3600) / 60);\n  //           const formattedTimeDifference =\n  //             (hours > 0 ? hours + ' hr ' : '') +\n  //             (minutes > 0 ? minutes + ' mins ' : '') +\n  //             'ago';\n  //           const transactionTimestamp = new Date(\n  //             transactionTime * 1000\n  //           ).toLocaleString('en-US', {\n  //             year: 'numeric',\n  //             month: 'short',\n  //             day: '2-digit',\n  //             hour: '2-digit',\n  //             minute: '2-digit',\n  //             second: '2-digit',\n  //             timeZoneName: 'short',\n  //           });\n  //           return `${formattedTimeDifference} (${transactionTimestamp} +UTC)`;\n  //         }\n  //       } catch (e) {\n  //         console.log(e);\n  //       }\n  //     }\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","useNavigate","R","jsxDEV","_jsxDEV","App","className","children","Routes","Route","path","element","Home","fileName","_jsxFileName","lineNumber","columnNumber","About","_c","$RefreshReg$"],"sources":["D:/Blockchain_Prac/block/client/myapp/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport { useNavigate,R } from 'react-router-dom';\n\nfunction App() {\n//   const [blockNumber, setBlockNumber] = useState({ num: '' });\n//   const [hash, setHash] = useState('');\n//   const [parentHash, setParenthash] = useState('');\n//   const [nonce, setNonce] = useState('');\n//   const [miner,setMiner] = useState('');\n//   const [timestamp, setTimestamp] = useState('');\n//   const [difficulty, setDifficulty] = useState('');\n//   const [number, setNumber] = useState('');\n//   const [extraData, setExtradata] = useState('');\n//   const [transactions, setTransactions] = useState('');\n\n//   function handle(e) {\n//     setBlockNumber({ num: e.target.value });\n//   }\n\n//   const navigate = useNavigate();\n\n//   const navigateToContacts = () => {\n//     // 👇️ navigate to /contacts\n//     navigate('./Transactions');\n//   }; // Replace '/' with the path to the next page\n\n\n//   async function getRes(event) {\n//     if (event.key === 'Enter') {\n//       try {\n//         const res = await axios.post('http://localhost:3001/gift', {\n//           num: blockNumber.num,\n//         });\n//         const r = res.data;\n//         setHash(r.hash);\n//         setParenthash(r.parentHash);\n//         setNonce(r.nonce);\n//         setNumber(r.number);\n//         setDifficulty(r.difficulty);\n//         setExtradata(r.extraData);\n//         setMiner(r.miner);\n//         setTransactions(r.transactions.length);\n//         setTimestamp(formatTimestamp(r.timestamp));\n\n//         function formatTimestamp(transactionTime) {\n//           const currentTime = Math.floor(Date.now() / 1000); // Current time in seconds\n//           const timeDifference = currentTime - transactionTime;\n//           const hours = Math.floor(timeDifference / 3600);\n//           const minutes = Math.floor((timeDifference % 3600) / 60);\n//           const formattedTimeDifference =\n//             (hours > 0 ? hours + ' hr ' : '') +\n//             (minutes > 0 ? minutes + ' mins ' : '') +\n//             'ago';\n//           const transactionTimestamp = new Date(\n//             transactionTime * 1000\n//           ).toLocaleString('en-US', {\n//             year: 'numeric',\n//             month: 'short',\n//             day: '2-digit',\n//             hour: '2-digit',\n//             minute: '2-digit',\n//             second: '2-digit',\n//             timeZoneName: 'short',\n//           });\n//           return `${formattedTimeDifference} (${transactionTimestamp} +UTC)`;\n//         }\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     }\n//   }\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"about\" element={<About />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,SAASC,WAAW,EAACC,CAAC,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA,CAACI,MAAM;MAAAD,QAAA,gBACLH,OAAA,CAACK,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEP,OAAA,CAACQ,IAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCZ,OAAA,CAACK,KAAK;QAACC,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEP,OAAA,CAACa,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACE,EAAA,GA7EQb,GAAG;AA+EZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}