{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain_Prac\\\\block\\\\client\\\\myapp\\\\src\\\\App.jsx\";\n// import { useState } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link,NavLink, BrowserRouter } from 'react-router-dom';\n// import './App.css'; \n// // import Transactions from './Transactions';\n// import Transactions from './Transactions';\n\n// function App() {\n//   const [blockNumber, setBlockNumber] = useState({ num: '' });\n//   const [hash, setHash] = useState('');\n//   const [parentHash, setParenthash] = useState('');\n//   const [nonce, setNonce] = useState('');\n//   const [timestamp, setTimestamp] = useState('');\n//   const [difficulty, setDifficulty] = useState('');\n//   const [number, setNumber] = useState('');\n//   //const [gasUsed, setgasUsed] = useState('');\n//   const [miner, setMiner] = useState('');\n//   const [extraData, setExtradata] = useState('');\n//   const [transactions, setTransactions] = useState('');\n//   //const [baseFee, setBasefee] = useState('');\n\n//   function handle(e){\n//     setBlockNumber({ num: e.target.value });\n//   }\n\n//   async function getRes(event){\n//     if (event.key === 'Enter') {\n//     try{\n//       const res = await axios.post('http://localhost:3001/gift', {\n//         num: blockNumber.num\n//       })\n//       const r = res.data;\n//       setHash(r.hash);\n//       setParenthash(r.parentHash);\n//       setNonce(r.nonce);\n//       setNumber(r.number);\n//       setDifficulty(r.difficulty);\n//       setExtradata(r.extraData)\n//       setMiner(r.miner);\n//       setTransactions(r.transactions.length);\n//       //setBasefee(r.baseFeePerGas);\n//       setTimestamp(formatTimestamp(r.timestamp));\n\n//       function formatTimestamp(transactionTime) {\n//         const currentTime = Math.floor(Date.now() / 1000); // Current time in seconds  \n//         const timeDifference = currentTime - transactionTime;\n//         const hours = Math.floor(timeDifference / 3600);\n//         const minutes = Math.floor((timeDifference % 3600) / 60);\n//         const formattedTimeDifference =\n//           (hours > 0 ? hours + ' hr ' : '') + (minutes > 0 ? minutes + ' mins ' : '') + 'ago';\n//         const transactionTimestamp = new Date(transactionTime * 1000).toLocaleString('en-US', {\n//           year: 'numeric',\n//           month: 'short',\n//           day: '2-digit',\n//           hour: '2-digit',\n//           minute: '2-digit',\n//           second: '2-digit',\n//           timeZoneName: 'short',\n//         });\n//         return `${formattedTimeDifference} (${transactionTimestamp} +UTC)`;\n//       }\n\n//     }\n//     catch(e){\n//       console.log(e);\n//     }\n//   }\n//   }\n\n//   return (\n\n// <>\n// <BrowserRouter>\n// <Router>\n//   <Route path='transactions' Component={Transactions}></Route>\n// </Router>\n// </BrowserRouter>\n//     <div class=\"body\">\n//       <div class=\"search-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter Block Number\"\n//           value={blockNumber.num}\n//           onChange={handle}\n//           class=\"search-box\"\n//           onKeyDown={getRes}\n//         />\n//         </div>\n//         <div class=\"block\">\n//             <div class=\"block-info\">\n//               <p>Block Number: </p>\n//               <p>Timestamp: </p>\n//               <p>Transactions: </p>\n//               <p>Gas Used: </p>\n//               <p>Gas Limit: </p>\n//               <p>Base Fee Per Gas: </p>\n//               <p>Burnt Fees: </p>\n//               <p>Extra Data: </p>\n//               <p>Hash: </p>\n//               <p>Parent Hash: </p>\n//               <p>Nonce: </p>\n//             </div>\n//             <div class=\"block-values\">\n//               {number && <p>{number}</p>}\n//               {timestamp && <p>ðŸ•“{timestamp}</p>}\n//               {transactions && <p> \n//                 <Link to=\"/transactions\" activeClassName=\"active\">{transactions} transactions</Link></p>}\n//               {miner && <p>{miner}</p>}\n//                 {hash && <p>{hash}</p>}\n//                 {parentHash && <p>{parentHash}</p>}\n//                 {nonce && <p>{nonce}</p>}\n\n//                 {difficulty && <p>{difficulty}</p>}\n//                 {extraData && <p>{extraData}</p>}\n//             </div>\n//       </div>\n//     </div>\n//     </>\n//   );\n\n// }\n\n// export default App;\n\nimport Home from './home';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport Transactions from './Transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/transactions\",\n          element: /*#__PURE__*/_jsxDEV(Transactions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","Routes","Route","BrowserRouter","Transactions","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/Blockchain_Prac/block/client/myapp/src/App.jsx"],"sourcesContent":["// import { useState } from 'react';\n// import axios from 'axios';\n// import { BrowserRouter as Router, Route, Link,NavLink, BrowserRouter } from 'react-router-dom';\n// import './App.css'; \n// // import Transactions from './Transactions';\n// import Transactions from './Transactions';\n\n\n\n// function App() {\n//   const [blockNumber, setBlockNumber] = useState({ num: '' });\n//   const [hash, setHash] = useState('');\n//   const [parentHash, setParenthash] = useState('');\n//   const [nonce, setNonce] = useState('');\n//   const [timestamp, setTimestamp] = useState('');\n//   const [difficulty, setDifficulty] = useState('');\n//   const [number, setNumber] = useState('');\n//   //const [gasUsed, setgasUsed] = useState('');\n//   const [miner, setMiner] = useState('');\n//   const [extraData, setExtradata] = useState('');\n//   const [transactions, setTransactions] = useState('');\n//   //const [baseFee, setBasefee] = useState('');\n\n//   function handle(e){\n//     setBlockNumber({ num: e.target.value });\n//   }\n\n\n//   async function getRes(event){\n//     if (event.key === 'Enter') {\n//     try{\n//       const res = await axios.post('http://localhost:3001/gift', {\n//         num: blockNumber.num\n//       })\n//       const r = res.data;\n//       setHash(r.hash);\n//       setParenthash(r.parentHash);\n//       setNonce(r.nonce);\n//       setNumber(r.number);\n//       setDifficulty(r.difficulty);\n//       setExtradata(r.extraData)\n//       setMiner(r.miner);\n//       setTransactions(r.transactions.length);\n//       //setBasefee(r.baseFeePerGas);\n//       setTimestamp(formatTimestamp(r.timestamp));\n\n//       function formatTimestamp(transactionTime) {\n//         const currentTime = Math.floor(Date.now() / 1000); // Current time in seconds  \n//         const timeDifference = currentTime - transactionTime;\n//         const hours = Math.floor(timeDifference / 3600);\n//         const minutes = Math.floor((timeDifference % 3600) / 60);\n//         const formattedTimeDifference =\n//           (hours > 0 ? hours + ' hr ' : '') + (minutes > 0 ? minutes + ' mins ' : '') + 'ago';\n//         const transactionTimestamp = new Date(transactionTime * 1000).toLocaleString('en-US', {\n//           year: 'numeric',\n//           month: 'short',\n//           day: '2-digit',\n//           hour: '2-digit',\n//           minute: '2-digit',\n//           second: '2-digit',\n//           timeZoneName: 'short',\n//         });\n//         return `${formattedTimeDifference} (${transactionTimestamp} +UTC)`;\n//       }\n\n\n//     }\n//     catch(e){\n//       console.log(e);\n//     }\n//   }\n//   }\n\n\n//   return (\n    \n// <>\n// <BrowserRouter>\n// <Router>\n//   <Route path='transactions' Component={Transactions}></Route>\n// </Router>\n// </BrowserRouter>\n//     <div class=\"body\">\n//       <div class=\"search-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter Block Number\"\n//           value={blockNumber.num}\n//           onChange={handle}\n//           class=\"search-box\"\n//           onKeyDown={getRes}\n//         />\n//         </div>\n//         <div class=\"block\">\n//             <div class=\"block-info\">\n//               <p>Block Number: </p>\n//               <p>Timestamp: </p>\n//               <p>Transactions: </p>\n//               <p>Gas Used: </p>\n//               <p>Gas Limit: </p>\n//               <p>Base Fee Per Gas: </p>\n//               <p>Burnt Fees: </p>\n//               <p>Extra Data: </p>\n//               <p>Hash: </p>\n//               <p>Parent Hash: </p>\n//               <p>Nonce: </p>\n//             </div>\n//             <div class=\"block-values\">\n//               {number && <p>{number}</p>}\n//               {timestamp && <p>ðŸ•“{timestamp}</p>}\n//               {transactions && <p> \n//                 <Link to=\"/transactions\" activeClassName=\"active\">{transactions} transactions</Link></p>}\n//               {miner && <p>{miner}</p>}\n//                 {hash && <p>{hash}</p>}\n//                 {parentHash && <p>{parentHash}</p>}\n//                 {nonce && <p>{nonce}</p>}\n                \n//                 {difficulty && <p>{difficulty}</p>}\n//                 {extraData && <p>{extraData}</p>}\n//             </div>\n//       </div>\n//     </div>\n//     </>\n//   );\n  \n\n// }\n\n// export default App;\n\n\nimport Home from './home';\nimport {Routes, Route, BrowserRouter} from 'react-router-dom';\nimport Transactions from './Transactions';\nfunction App() {\n  return(\n    <BrowserRouter>\n    <div>\n      <Home />\n      <Routes>\n        <Route path=\"/transactions\" element={<Transactions />} />\n      </Routes>\n    </div>\n  </BrowserRouter>\n  )\n}\nexport default App;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAGA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAAQC,MAAM,EAAEC,KAAK,EAAEC,aAAa,QAAO,kBAAkB;AAC7D,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA,CAACH,aAAa;IAAAK,QAAA,eACdF,OAAA;MAAAE,QAAA,gBACEF,OAAA,CAACN,IAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRN,OAAA,CAACL,MAAM;QAAAO,QAAA,eACLF,OAAA,CAACJ,KAAK;UAACW,IAAI,EAAC,eAAe;UAACC,OAAO,eAAER,OAAA,CAACF,YAAY;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAElB;AAACG,EAAA,GAXQR,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}