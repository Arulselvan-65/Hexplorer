{"ast":null,"code":"// Expose `IntlPolyfill` as global to add locale data into runtime later on.\nglobal.IntlPolyfill = require('./lib/core.js');\n\n// Require all locale data for `Intl`. This module will be\n// ignored when bundling for the browser with Browserify/Webpack.\nrequire('./locale-data/complete.js');\n\n// hack to export the polyfill as global Intl if needed\nif (!global.Intl) {\n  global.Intl = global.IntlPolyfill;\n  global.IntlPolyfill.__applyLocaleSensitivePrototypes();\n}\n\n// providing an idiomatic api for the nodejs version of this module\nmodule.exports = global.IntlPolyfill;","map":{"version":3,"names":["global","IntlPolyfill","require","Intl","__applyLocaleSensitivePrototypes","module","exports"],"sources":["D:/Blockchain_Prac/block/client/myapp/node_modules/intl/index.js"],"sourcesContent":["// Expose `IntlPolyfill` as global to add locale data into runtime later on.\nglobal.IntlPolyfill = require('./lib/core.js');\n\n// Require all locale data for `Intl`. This module will be\n// ignored when bundling for the browser with Browserify/Webpack.\nrequire('./locale-data/complete.js');\n\n// hack to export the polyfill as global Intl if needed\nif (!global.Intl) {\n    global.Intl = global.IntlPolyfill;\n    global.IntlPolyfill.__applyLocaleSensitivePrototypes();\n}\n\n// providing an idiomatic api for the nodejs version of this module\nmodule.exports = global.IntlPolyfill;\n"],"mappings":"AAAA;AACAA,MAAM,CAACC,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE9C;AACA;AACAA,OAAO,CAAC,2BAA2B,CAAC;;AAEpC;AACA,IAAI,CAACF,MAAM,CAACG,IAAI,EAAE;EACdH,MAAM,CAACG,IAAI,GAAGH,MAAM,CAACC,YAAY;EACjCD,MAAM,CAACC,YAAY,CAACG,gCAAgC,CAAC,CAAC;AAC1D;;AAEA;AACAC,MAAM,CAACC,OAAO,GAAGN,MAAM,CAACC,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}